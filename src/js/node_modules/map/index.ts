import Renderer from 'map/Renderer';
import BuffersManager from 'map/data/BuffersManager';
import MapData from 'map/data/MapData';
import State from 'map/data/State';
import Events from 'Events';

import featureHoverMap from 'map/features/featureHoverMap';
import featureHoverItem from 'map/features/featureHoverItem';
import featureGoTo from 'map/features/featureGoTo';
import featureCanvasResize from 'map/features/featureCanvasResize';
import featureCanvasPointerEvents from 'map/features/featureCanvasPointerEvents';
import featureMapColor from 'map/features/featureMapColor';
import featureLoaderData from 'map/features/featureLoaderData';
import featureLoaderBacgroundBitData from 'map/features/featureLoaderBacgroundBitData';
import featureSearch from 'map/features/featureSearch';
import featureClickMap from 'map/features/featureClickMap';

/******************************/

export type MapApi = {
    canvas?: HTMLCanvasElement,
    events?: Events,
    initPromise?: Promise<void>
}

/******************************/

export default function initMap(
    canvas: HTMLCanvasElement
): MapApi {
    let events = new Events();
    let buffersManager = new BuffersManager();
    let mapData = new MapData();
    let renderer = new Renderer(canvas);
    let state = new State();

    let initPromise = (async function(){
        buffersManager.init();
        await renderer.init(
            buffersManager.getDataBuffer(),
            buffersManager.getColorBuffer()
        );

        // DOM init events
        featureCanvasResize(canvas, renderer, state);
        featureCanvasPointerEvents(canvas, renderer, state, events);

        // handling events
        featureLoaderBacgroundBitData(events, buffersManager, renderer);
        featureLoaderData(events, mapData, buffersManager, renderer);
        featureSearch(events, mapData);
        featureGoTo(events, state, renderer);
        featureHoverMap(events, mapData);
        featureHoverItem(events, buffersManager, renderer);
        featureClickMap(events, mapData);
        featureMapColor(events, buffersManager, renderer);
    })();

    return {
        initPromise,
        events,
        canvas
    }
}