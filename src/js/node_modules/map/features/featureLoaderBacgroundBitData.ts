import BuffersManager, {
    TILE_TYPE_BORDER,
    TILE_TYPE_BORDER_WATER
} from "map/data/BuffersManager";
import Events from "map/Events";
import Renderer from "map/Renderer";

/******************************/

export default function featureLoaderBacgroundBitData(
    events: Events,
    buffersManager: BuffersManager,
    renderer: Renderer
): void {
    events.on('data/bg', (dataBuffer) => {
        const MAP_SIZE = 1000;
        const TILE_COUNT = MAP_SIZE * MAP_SIZE;
        const BITS_IN_TILE_PER_BYTE = 5 / 8;

        let dataView = new DataView(dataBuffer);

        for (let tilePos = 0; tilePos < TILE_COUNT; tilePos++) {
            let bytePosInSegment    = tilePos % 8,
                byteOffset          = (tilePos - bytePosInSegment) * BITS_IN_TILE_PER_BYTE,
                result;

            switch (bytePosInSegment) {
                case 0:
                    result = (dataView.getUint8(byteOffset) >> 3);
                    break;
                case 1:
                    result = ((dataView.getUint8(byteOffset) << 2) + (dataView.getUint8(byteOffset + 1) >> 6));
                    break;
                case 2:
                    result = dataView.getUint8(byteOffset + 1) >> 1;
                    break;
                case 3:
                    result = ((dataView.getUint8(byteOffset + 1) << 4) + (dataView.getUint8(byteOffset + 2) >> 4));
                    break;
                case 4:
                    result = ((dataView.getUint8(byteOffset + 2) << 1) + (dataView.getUint8(byteOffset + 3) >> 7));
                    break;
                case 5:
                    result = (dataView.getUint8(byteOffset + 3) >> 2);
                    break;
                case 6:
                    result = ((dataView.getUint8(byteOffset + 3) << 3) + (dataView.getUint8(byteOffset + 4) >> 5));
                    break;
                case 7:
                    result = dataView.getUint8(byteOffset + 4);
                    break;
            }

            result&= 31;

            if (result >>> 4) {
                let y = tilePos % MAP_SIZE,
                    x = Math.floor(tilePos / MAP_SIZE);

                if ((result >> 2) & 1) {
                    buffersManager.tileSetType(x, y, TILE_TYPE_BORDER);
                } else {
                    buffersManager.tileSetType(x, y, TILE_TYPE_BORDER_WATER);
                }
            }
        }

        renderer.updateData(buffersManager.getDataBuffer());
    });
}