import { WorldStore } from "stores/world";
import { CanvasApi } from "canvas";

/******************************/

export default function bindMainCanvasWorldStore(
    mainCanvas: CanvasApi,
    worldStore: WorldStore
) {
    // store -> canvas

    let prevView = worldStore.getState().view;

    let unsubscriber = worldStore.subscribe(() => {
        let currentView = worldStore.getState().view;

        if (currentView !== prevView) {
            let { x, y, size } = currentView;

            console.log(x, y);

            mainCanvas.commands.setTileSize(size);
            mainCanvas.commands.setPositionTile(x, y);

            prevView = currentView;
        }
    });

    // canvas -> store

    let saveViewTimeoutId = null,
        viewState = {
            x: 0,
            y: 0,
            size: 0
        },
        saveView = () => {
            worldStore.actions.setView(viewState);
        },
        requestSaveView = () => {
            if (saveViewTimeoutId !== null) {
                clearTimeout(saveViewTimeoutId);
            }

            saveViewTimeoutId = setTimeout(saveView, 1e3);
        };

    mainCanvas.events.on('changed position/tile', (position) => {
        viewState.x = position.x;
        viewState.y = position.y;
        requestSaveView();
    });
    mainCanvas.events.on('changed canvas/size/tile', (value) => {
        viewState.size = value;
        requestSaveView();
    });
}