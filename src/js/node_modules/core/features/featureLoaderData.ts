import Events from "core/Events";
import Renderer from "core/Renderer";
import BuffersManager, {
    TILE_TYPE_VILLAGE
} from "core/BuffersManager";
import MapData from "core/data/MapData";
import Character from "core/data/objects/Character";
import Village from "core/data/objects/Village";
import Tribe from "core/data/objects/Tribe";

import {
    COLOR_INDEX_VILLAGE_PLAYER,
    COLOR_INDEX_VILLAGE_BARBARIAN
} from 'data/mapColors';

/******************************/

export default function featureLoaderData(
    events: Events,
    mapData: MapData,
    buffersManager: BuffersManager,
    renderer: Renderer
): void {
    events.on('data/load', (jsonData: any) => {
        mapData.setDownloadTime(jsonData.time);

        // odczytywanie plemion i tworzenie obiektów
        for (let tribeId in jsonData.tribes) {
            let tribeData = jsonData.tribes[ tribeId ],
                tribe: Tribe = new Tribe();

            tribe.id = parseInt(tribeId);
            tribe.name = tribeData[0];
            tribe.tag = tribeData[1];
            tribe.points = parseInt(tribeData[2]);

            mapData.addTribe(tribe);
        }

        // odczytywanie graczy i tworzenie obiektów
        for (let characterId in jsonData.characters) {
            let characterData = jsonData.characters[ characterId ],
                character = new Character();

            character.id = parseInt(characterId);
            character.name = characterData[0];
            character.points = parseInt(characterData[1]);
            character.tribeId = parseInt(characterData[2]) || null;

            mapData.addCharacter(character);
        }

        // odczytywanie wiosek i tworzenie obiektów
        for (let villageId in jsonData.villages) {
            let villageData = jsonData.villages[ villageId ],
                village = new Village();

            village.id = parseInt(villageId);
            village.x = parseInt(villageData[0]);
            village.y = parseInt(villageData[1]);
            village.name = villageData[2];
            village.points = parseInt(villageData[3]);
            village.characterId = parseInt(villageData[4]) || null;

            mapData.addVillage(village);

            if (village.characterId) {
                buffersManager.tileSetColorSlot(
                    village.x,
                    village.y,
                    COLOR_INDEX_VILLAGE_PLAYER
                );
            } else {
                buffersManager.tileSetColorSlot(
                    village.x,
                    village.y,
                    COLOR_INDEX_VILLAGE_BARBARIAN
                );
            }
            buffersManager.tileSetType(
                village.x,
                village.y,
                TILE_TYPE_VILLAGE
            );
        }

        renderer.updateData(
            buffersManager.getDataBuffer()
        );
    });
}