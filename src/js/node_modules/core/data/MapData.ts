import Tribe from './objects/Tribe';
import Character from './objects/Character';
import Village from './objects/Village';
import WorldDetails from './objects/WorldDetails';

/******************************/

export type VillageByCoords = {[key: number]: {[key: number]: Village}};
export type VillageMap = {[key: number]: Village};
export type CharacterMap = {[key: number]: Character};
export type TribeMap = {[key: number]: Tribe};

/******************************/

export default class MapData {
    villageByCoords: VillageByCoords = {};
    villageMap: VillageMap = {};
    characterMap: CharacterMap = {};
    tribeMap: TribeMap = {};
    world: WorldDetails = new WorldDetails();
    downloadedDataTime: number = 0;

    /******************************/

    /**
     * Czyszczenie danych
     */
    clearMapData(): void {
        this.villageByCoords = {};
        this.villageMap = {};
        this.characterMap = {};
        this.tribeMap = {};
        this.world.villageCount = 0;
        this.world.villageBarbarianCount = 0;
        this.world.characterCount = 0;
        this.world.tribeCount = 0;
    }

    /******************************/

    /**
     * Zwracamy time pobrania danych mapy
     */
    getMapDataTime(): number {
        return this.downloadedDataTime;
    }

    /**
     * Ustawienie daty pobranych danych
     * @param time UNIX
     */
    setDownloadTime(
        time: number | string
    ): void {
        this.downloadedDataTime = parseInt(time as string);
    }

    /******************************/

    // Wioski, Gracze, Plemiona

    /**
     * Pobranie obiektu plemienia poprzez ID
     * @param tribeId
     */
    getTribe(
        tribeId: number | string
    ): Tribe | null {
        if (this.tribeMap[ tribeId ]) {
            return this.tribeMap[ tribeId ];
        }

        return null;
    }

    /**
     * Dodanie obiektu plemienia struktur
     * @param tribe
     */
    addTribe(
        tribe: Tribe
    ): void {
        if (!this.tribeMap[ tribe.id ]) {
            this.tribeMap[ tribe.id ] = tribe;
            this.world.tribeCount++;
        }
    }

    /**
     * Pobranie obiektu gracza poprzez ID
     * @param characterId
     */
    getCharacter(
        characterId: number | string
    ): Character | null {
        if (this.characterMap[ characterId ]) {
            return this.characterMap[ characterId ];
        }

        return null;
    }

    /**
     * Dodanie obiektu gracza do struktur
     * @param character
     */
    addCharacter(
        character: Character
    ): void {
        if (!this.characterMap[ character.id ]) {
            if (character.tribeId) {
                let tribe: Tribe = this.getTribe(character.tribeId);

                tribe.addCharacter(character);
                character.tribe = tribe;
                character.group = tribe;
            }

            this.characterMap[ character.id ] = character;
            this.world.characterCount++;
        }
    }

    /**
     * Pobranie obiektu wioski poprzez ID
     * @param villageId
     */
    getVillage(
        villageId: number | string
    ): Village | null {
        if (this.villageMap[ villageId ]) {
            return this.villageMap[ villageId ];
        }

        return null;
    }

    /**
     * Pobranie obiektu wioski poprzez współrzędne
     * @param x
     * @param y
     */
    getVillageByCoords(
        x: number,
        y: number
    ): Village | null {
        if (this.villageByCoords[ x ]
            && this.villageByCoords[ x ][ y ]
        ) {
            return this.villageByCoords[ x ][ y ];
        }

        return null;
    }

    /**
     * Dodanie wioski do struktur danych
     * @param village
     */
    addVillage(
        village: Village
    ): void {
        if (!this.villageMap[ village.id ]) {
            if (village.characterId) {
                let character = this.getCharacter(village.characterId);

                village.character = character;
                village.group = character;

                if (character) {
                    character.addVillage(village);
                    village.tribe = character.tribe;
                }
            } else {
                this.world.villageBarbarianCount++;
            }

            this.villageMap[ village.id ] = village;

            this.villageByCoords[ village.x ] = this.villageByCoords[ village.x ] || {};
            this.villageByCoords[ village.x ][ village.y ] = village;
            this.world.villageCount++;
        }
    }
}
