import State from './state';
import * as mapColors from 'stores/@/MapColors';

/******************************/

const INIT_STATE = new State().init();

/******************************/

export function reducer(
    state = INIT_STATE,
    action: any & {type: string}
): State {
    let newState: State;

    switch (action.type) {
        case 'mapColor':
            newState = mapColors.reducer<State>(state, action);
            if (newState !== null) return newState;
        case 'command/import':
            let stringData = window.localStorage.getItem('global');

            newState = new State().init();

            try {
                let data = JSON.parse(stringData);

                newState = {...newState, ...data};

                return newState;
            } catch (error) {
                // TODO
            }

            break;
    }

    // defualt

    if (action.type
        && action.prefix
        && state.hasOwnProperty(action.prefix)
        && state[ action.prefix ].hasOwnProperty(action.type)
    ) {
        newState = new State();

        Object.assign(newState, state);
        newState[ action.prefix ] = new newState[ action.prefix ]['__proto__'].constructor();
        Object.assign(newState[ action.prefix ], state[ action.prefix ]);
        newState[ action.prefix ][ action.type ] = action.value;

        return newState;
    }

    return state;
}