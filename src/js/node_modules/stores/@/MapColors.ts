import BaseState from "stores/@/BaseState";

/******************************/

export const COLOR_INDEX_BACKGROUND = 0;
export const COLOR_INDEX_BORDER_PROVINCE = 1;
export const COLOR_INDEX_BORDER_CONTINENT = 2;
export const COLOR_INDEX_VILLAGE_PLAYER = 3;
export const COLOR_INDEX_VILLAGE_BARBARIAN = 4;
export const COLOR_INDEX_HOVER_ITEM = 5;
export const COLOR_INDEX_HOVER_GROUP = 6;

/******************************/

type MapColorItem = {
    index: number,
    label: string,
    key: keyof MapColors
};

export const mapColorList: MapColorItem[] = [
    {
        index: COLOR_INDEX_BACKGROUND,
        label: 'Background',
        key: 'background'
    },
    {
        index: COLOR_INDEX_BORDER_PROVINCE,
        label: 'Province border',
        key: 'borderProvince'
    },
    {
        index: COLOR_INDEX_BORDER_CONTINENT,
        label: 'Continent border',
        key: 'borderContinent'
    },
    {
        index: COLOR_INDEX_VILLAGE_PLAYER,
        label: 'Player\'s villages',
        key: 'villagePlayer'
    },
    {
        index: COLOR_INDEX_VILLAGE_BARBARIAN,
        label: 'Barbarian\'s villages',
        key: 'villageBarbarian'
    },
    {
        index: COLOR_INDEX_HOVER_ITEM,
        label: 'Hover of item',
        key: 'hoverItem'
    },
    {
        index: COLOR_INDEX_HOVER_GROUP,
        label: 'Hover of group',
        key: 'hoverGroup'
    }
];

const map_index2color: {[key: number]: MapColorItem} = {};
for (let item of mapColorList) {
    map_index2color[ item.index ] = item;
}

const map_key2color: {[key: string]: MapColorItem} = {};
for (let item of mapColorList) {
    map_key2color[ item.key ] = item;
}

export const maps = {
    index2color: map_index2color,
    key2color: map_key2color
}

/******************************/

export default class MapColors {
    background = '#004000';
    borderProvince = '#888888';
    borderContinent = '#ffff00';
    villagePlayer = '#003000';
    villageBarbarian = '#005000';
    hoverItem = '#ffffff';
    hoverGroup = '#999999';
}

/******************************/

type Action = {
    type: 'mapColor',
    param: keyof MapColors,
    value: string
};

export function reducer<State extends BaseState & {mapColors: MapColors}>(
    state: State,
    action: Action
): State | null {
    if (action.type !== 'mapColor'
        || !action.param
        || !map_key2color.hasOwnProperty(action.param)
    ) {
        return null;
    }

    let newState = state.new() as State;

    Object.assign(newState, state);
    newState.mapColors = new MapColors();
    Object.assign(newState.mapColors, state.mapColors);
    newState.mapColors[ action.param ] = action.value;

    return newState;
}

export function action(
    key: keyof MapColors,
    value: string
): void {
    this.dispatch({
        type: 'mapColor',
        param: key,
        value
    });
}