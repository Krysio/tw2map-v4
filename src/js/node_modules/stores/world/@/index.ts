import * as $mapColors from 'stores/@/mapColors';
import * as $view from 'stores/world/@/view';
import * as $markers from 'stores/world/@/markers';

/******************************/

export function createState() {
    return {
        worldKey: null as string,
        view: $view.initStateView,
        mapColors: $mapColors.initStateMapColors,
        markers: $markers.createState()
    };
}

export const StatePrototype = {
    clone(
        this: State
    ) {
        return wrapper({ ...this });
    },
    getMarkers(
        this: State
    ) {
        return $markers.wrapper(this.markers);
    }
};

/******************************/

export function wrapper(
    stateObject: State
): WState {
    Object.setPrototypeOf(stateObject, StatePrototype);

    return stateObject as WState;
}

export type State = ReturnType<typeof createState>;
export type WState = State & typeof StatePrototype;
