import State from './state';
import View from './state/View';

/******************************/

const INIT_STATE = new State().init();

/******************************/

export function reducer(
    state = INIT_STATE,
    action
): State {
    switch (action.type) {
        case 'command/import': {
            let stringData = window.localStorage.getItem(action.worldKey),
                newState = new State().init();

            newState.worldKey = action.worldKey;

            try {
                let data = JSON.parse(stringData);

                for (let prefix in state) {
                    for (let key in state[ prefix ]) {
                        if (data.hasOwnProperty(prefix)
                            && data[ prefix ].hasOwnProperty(key)
                        ) {
                            newState[ prefix ][ key ] = data[ prefix ][ key ];
                        }
                    }
                }

                return newState;
            } catch (error) {
                // TODO
            }
        } break;
        case 'view': {
            let newState = new State();

            Object.assign(newState, state);
            newState.view = new View();
            Object.assign(newState.view, action.value);

            return newState;
        } break;
    }

    return state;
}