import debug from 'debug';
import * as $state from 'stores/world/@';
import * as $mapColors from 'stores/@/mapColors';
import * as $view from 'stores/world/@/view';
import * as $markers from 'stores/world/@/markers';

/******************************/

const debugLog = debug('app:sotres:world:reducer');

/******************************/

const reducerMap = {
    ...$view.createReducers<any>(),
    ...$mapColors.createReducers<any>(),
    ...$markers.createReducers()
};

/******************************/

export function reducer(
    state = $state.createState(),
    action
) {
    debugLog(action.type, action, state);

    switch (action.type) {
        case 'command/import': {
            let worldKey = `${ action.marketId }/${ action.worldId }`,
                stringData = window.localStorage.getItem(worldKey);

            try {
                const nextState = { ...$state.createState(), ...JSON.parse(stringData) };

                nextState.worldKey = worldKey;
                debugLog(nextState);

                return $state.wrapper(nextState);
            } catch (error) {
                debugLog('db fail', error);
                // TODO
            }

            const nextState = { ...state };

            nextState.worldKey = worldKey;

            return $state.wrapper(nextState);
        } break;
    }

    if (action.type in reducerMap) {
        const result = reducerMap[ action.type ](state, action.value);

        debugLog(action.type, action.value, result);

        const wrappedState = $state.wrapper(result);

        return wrappedState;
    }

    return $state.wrapper(state);
}