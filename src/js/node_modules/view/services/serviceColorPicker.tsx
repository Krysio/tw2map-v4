import * as React from 'react';
import ModalManager, { Modal, Header, Body, Footer, Hook } from "libs/ModalManager";
import LazyPromise from 'libs/LazyPromise';

const ColorPicker = require('rc-color-picker');

/******************************/

export default function serviceColorPicker(
    modalManager: ModalManager
): (
    inputColor: string,
    onChangeCb: (color: string) => void
) => Promise<string> {
    function service(
        inputColor: string,
        onChangeCb: (color: string) => void = null
    ): Promise<string> {
        let hook: Hook = modalManager.createHook(),
            color: string = inputColor,
            lazyPromise = new LazyPromise();

        function onClose(): void {
            hook.close();
            lazyPromise.reject(null);
        }

        hook.setLayout(
            <Modal onClose={ onClose }>
                <Header>
                    Color picker
                </Header>
                <Body className="p-0">
                    <ColorPicker.Panel
                        color={ color }
                        enableAlpha={ false }
                        onChange={(colorBox: {color: string, alpha: number}) => {
                            color = colorBox.color;

                            if (onChangeCb !== null) {
                                onChangeCb(color);
                            }
                        }}
                    />
                </Body>
                <Footer>
                    <button
                        className="btn btn-success"
                        onClick={(e) => {
                            hook.close();
                            lazyPromise.resolve(color);
                        }}
                    >
                        OK
                    </button>
                    <button
                        className="btn btn-warrning"
                        onClick={ onClose }
                    >
                        Cancel
                    </button>
                </Footer>
            </Modal>
        );
        hook.setCursorPosition();

        return lazyPromise.get();
    }

    return service;
}