import * as React from 'react';
import ModalManager, { Modal, Header, Body, Footer, Hook } from "libs/ModalManager";
import LazyPromise from 'libs/LazyPromise';

const ColorPicker = require('rc-color-picker');

/******************************/

export default function serviceColorPicker(
    modalManager: ModalManager
): (
    inputColor: string,
    onChangeCb: (color: string) => void,
    enableAlpha?: boolean
) => {
    promise: Promise<string>,
    hook: Hook
} {
    function service(
        inputColor: string,
        onChangeCb: (color: string) => void = null,
        enableAlpha = false
    ): {
        promise: Promise<string>,
        hook: Hook
    } {
        let hook: Hook = modalManager.createHook(),
            color: string = inputColor,
            alpha = 100,
            lazyPromise = new LazyPromise<string>();

        function onClose(): void {
            hook.close();
            lazyPromise.reject(null);
        }

        if (color.length === 9) {
            alpha = parseInt(color.substr(-2, 2), 16);
            color = color.substr(0, 7);
        }

        hook.setLayout(
            <Modal onClose={ onClose }>
                <Header>
                    Color picker
                </Header>
                <Body className="p-0">
                    <ColorPicker.Panel
                        color={ color }
                        alpha={ alpha }
                        defaultAlpha={ alpha }
                        enableAlpha={ enableAlpha }
                        onChange={(colorBox: {color: string, alpha: number}) => {
                            color = colorBox.color+Math.round(255 * colorBox.alpha / 100).toString(16);

                            if (onChangeCb !== null) {
                                onChangeCb(color);
                            }
                        }}
                    />
                </Body>
                <Footer>
                    <button
                        className="btn btn-success"
                        onClick={(e) => {
                            hook.close();
                            lazyPromise.resolve(color);
                        }}
                    >
                        OK
                    </button>
                    <button
                        className="btn btn-warrning"
                        onClick={ onClose }
                    >
                        Cancel
                    </button>
                </Footer>
            </Modal>
        );
        hook.setCursorPosition();

        return {
            promise: lazyPromise.get(),
            hook: hook
        };
    }

    return service;
}
export type ColorPicker = ReturnType<typeof serviceColorPicker>;