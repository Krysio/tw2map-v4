import * as React from 'react';
import ModalManager, { Modal, Header, Body, Footer, Hook } from "libs/ModalManager";
import LazyPromise from 'libs/LazyPromise';

/******************************/

export default function serviceConfirm(
    modalManager: ModalManager
) {
    function service(
        header: string,
        body?: string,
        yesLabel = 'OK',
        noLabel = 'Cancel'
    ): Promise<string> {
        let hook: Hook = modalManager.createHook(),
            lazyPromise = new LazyPromise();

        function onClose(): void {
            hook.close();
            lazyPromise.reject(null);
        }

        hook.setLayout(
            <Modal onClose={ onClose } className="dialog-modal">
                <Header>
                    { header }
                </Header>
                {body ? (
                    <Body className="p-2">{ body }</Body>
                ) : null}
                <Footer>
                    <button
                        className="btn btn-success"
                        onClick={(e) => {
                            hook.close();
                            lazyPromise.resolve(null);
                        }}
                    >
                        { yesLabel }
                    </button>
                    <button
                        className="btn btn-warrning"
                        onClick={ onClose }
                    >
                        { noLabel }
                    </button>
                </Footer>
            </Modal>
        );
        hook.setCursorPosition();

        return lazyPromise.get();
    }

    return service;
}
export type Prompt = ReturnType<typeof serviceConfirm>;