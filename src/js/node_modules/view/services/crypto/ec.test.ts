import * as ec from './ec';
import { HexSignature, HexPrivateKey, HexPublicKey } from './ec';

/******************************/

// priv - 62/64
// pub xy - 130
// pub sx - 66

const REGE_HEX = /[0-9a-f]+/;
const PRIV_LENGTH_62 = [
    'cbd5776e1fb7127514f70e7f3f370e82f33cf14fd8bd8cb8676aba6ad5a88d',
    'dfd42321c7d6dde5666f28c55807dd1b2c0bbd21cda16c6c07ef7f0e73eea2',
    '332e4f39a228f17727bb96c77d555f11d35746a5b8358be67ef1dd6f6e3410',
    'ffba8e71031e98061776ed8a87f2a7891c75ee0af1f6403568afb8b7acba0f'
];

/******************************/

it('keys', () => {
    let [ privateKey, publicKey ] = ec.getKeys();

    expect(REGE_HEX.test(privateKey)).toBe(true);
    expect(REGE_HEX.test(publicKey)).toBe(true);
});

it('signature verify', () => {
    let publicKey: HexPublicKey = '041b0b2182a1656a9f8711605ed9403423c5b2ea034622ba7106bfeb9f138c67e05c671d31a59c39d0b1d312113b69c3d0a159311e60bbfa2befaae21a49ea172f',
        text2Sign = 'test',
        validSignature: HexSignature = '3045022100ad99dffc0bd9f954b46656f223eede0dc50d40e8ed261419cff9c1e310bdaad6022056d63a8eb85828d6afa4570975ccf0682a2dca79ddb24a43910078daf2f9775f',
        invalidSignature: HexSignature = '30460221008066ce2db3b79f6243bf3db980c90be5ba91af02636d2addd5477e50dfe8fd1202210081774e6cf3fede8130c650ca22aa7de9a7f59ca248ef4abf1335d0dce24adb2c';

    expect(ec.verify(publicKey, text2Sign, validSignature)).toBe(true);
    expect(ec.verify(publicKey, text2Sign, invalidSignature)).toBe(false);
});

it('signature', () => {
    let privateKey: HexPrivateKey = 'a166eedcc130ef4e94cc26c96679bee4bd38429cfc7ce8760fca0b1e2a92dd0a',
        publicKey: HexPublicKey = '041b0b2182a1656a9f8711605ed9403423c5b2ea034622ba7106bfeb9f138c67e05c671d31a59c39d0b1d312113b69c3d0a159311e60bbfa2befaae21a49ea172f',
        text2Sign = 'test',
        signature: HexSignature = ec.sign(privateKey, text2Sign);

    expect(REGE_HEX.test(signature)).toBe(true);
    expect(ec.verify(publicKey, text2Sign, signature)).toBe(true);
});

test('compress & decompress', () => {
    let publicKey: HexPublicKey = '041b0b2182a1656a9f8711605ed9403423c5b2ea034622ba7106bfeb9f138c67e05c671d31a59c39d0b1d312113b69c3d0a159311e60bbfa2befaae21a49ea172f',
        compressed = ec.compressPublicKey(publicKey),
        decompressed = ec.decompressPublicKey(compressed);

    expect(decompressed).toBe(publicKey);
});