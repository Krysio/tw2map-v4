import * as React from 'react';
import debug from 'debug';
import { EventEmitter } from "events";
import { ViewContext } from 'view/viewContext';
import {
    IconOnOff, IconEdit
} from 'view/components/icon';

/******************************/

const debugLog = debug('app:view:markers:markerHeader');

/******************************/

type ComponentProps = {
    context: ViewContext,
    color: string,
    setColor?: (color: string) => void,
    onColorChanged?: (color: string) => void
} & ({
    active: undefined,
    toggleActive: undefined,
} | {
    active: boolean,
    toggleActive: () => void,
});
type ComponentState = {};

/******************************/

export default
class ColorBtn
extends React.Component<
    ComponentProps,
    ComponentState
> {
    onColorChanged = (color: string) => {
        const { setColor, onColorChanged } = this.props;
        
        this.pickerHandler = null;
        debugLog(color);
        setColor && setColor(color);
        onColorChanged && onColorChanged(color);
    }
    protected pickerHandler = null;
    onClick = () => {
        const cPick = this.props.context.services.colorPicker;
        if (this.pickerHandler === null) {
            this.pickerHandler = cPick(this.props.color, (color) => {}, true);
            this.pickerHandler.promise.then(
                this.onColorChanged,
                (error) => {}
            );
        } else {
            this.pickerHandler.hook.active();
        }
    }
    render(): JSX.Element {
        const { color, active, toggleActive } = this.props;

        const btnStyle
        = (active !== undefined && !active)
        ? 'btn-dark'
        : 'btn-success';

        return (
            <div className={`btn ${btnStyle} btn-xs c-btn-color`} style={{'backgroundColor': color}}>
                {active !== undefined ? (
                    <button
                        className={`btn ${btnStyle} ce-btn-onoff`}
                        onClick={ toggleActive }
                    >
                        <IconOnOff />
                    </button>
                ) : null}
                <button
                    className={`btn btn-info ce-btn-edit`}
                    onClick={this.onClick}
                >
                    <IconEdit />
                </button>
            </div>
        );
    }
}