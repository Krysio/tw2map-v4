import * as React from 'react';

/******************************/

type ComponentProps = Readonly<{
    children?: React.ReactNode,
    onChange: (value: boolean) => void,
    value: boolean
}>;
type ComponentState = Readonly<{
    value: boolean
}>

/******************************/

export default
class ButtonOnOff
extends React.Component<ComponentProps, ComponentState> {
    constructor(props) {
        super(props);

        this.onClickOn = this.onClickOn.bind(this);
        this.onClickOff = this.onClickOff.bind(this);
    }

    /******************************/

    onClickOn(e: React.MouseEvent): void {
        if (this.props.value === false) {
            this.props.onChange(true);
        }
    }

    onClickOff(e: React.MouseEvent): void {
        if (this.props.value === true) {
            this.props.onChange(false);
        }
    }

    /******************************/

    render(): React.ReactNode {
        let value = this.props.value;

        return (
            <div className="btn-group">
                <button
                    className={
                        value
                            ? "btn btn-success"
                            : "btn btn-dark"
                    }
                    onClick={ this.onClickOn }
                >
                    On
                </button>
                <button
                    className={
                        value
                            ? "btn btn-dark"
                            : "btn btn-danger"
                    }
                    onClick={ this.onClickOff }
                >
                    Off
                </button>
            </div>
        );
    }
}
