import { ViewContext } from 'view/viewContext';
import { postPackage } from 'view/services/package';

/******************************/

export default async function featureShare(
    context: ViewContext
) {
    const worldStore = context.stores.world;
    const worldState = worldStore.getState();
    const markersState = worldState.getMarkers();
    const activePackage = markersState.getActivePackage();
    const defaultPackage = markersState.getDefaultPackage();

    const pathname = window.location.pathname;

    try {
        const { status, uuid, privateKey, publicKey } = await postPackage(activePackage);

        if (status) {
            if (activePackage === defaultPackage) {
                worldStore.actions.packageClone(
                    defaultPackage.uuid,
                    {
                        share: {
                            publicKey,
                            privateKey,
                            uuid: uuid
                        },
                        type: 'url' as typeof defaultPackage.type
                    },
                    true
                );
            } else {
                worldStore.actions.packageUpdate(
                    activePackage.uuid,
                    {
                        share: {
                            publicKey,
                            privateKey,
                            uuid: uuid
                        },
                        type: 'url' as typeof defaultPackage.type
                    }
                );
            }

            context.services.prompt(
                `Your's url`,
                `${ origin }${ pathname }/package/${ uuid }`
            ).catch(() => null);
        }
    } catch (error) {
        await context.services.alert(
            `Error`,
            error.message
        );
    }
}