import * as React from 'react';
import { Hook } from 'libs/ModalManager';
import { ViewContext } from 'view/viewContext';

/******************************/

type ComponentProps = Readonly<{
    hook: Hook,
    context: ViewContext,
    updateModal: () => void,
    children?: React.ReactNode
}>;
type ComponentState = Readonly<{}>

/******************************/

export default
class MarkersModalFooter
extends React.Component<
    ComponentProps,
    ComponentState
> {
    onClickAddMarkerBtn = (e: React.MouseEvent) => {
        this.props.context.services.prompt('Enter the name', 'New marker').then(
            (enteredName) => this.props.context.stores.world.actions.createNewMarker(enteredName),
            (error) => null
        );
    }

    /******************************/
    unsubscriberList = [];

    componentDidMount(): void {
        this.unsubscriberList.push(
            this.props.context.stores.world.subscribe(
                () => this.forceUpdate()
            )
        );
    }

    componentWillUnmount(): void {
        let unsubscriber;

        while (unsubscriber = this.unsubscriberList.pop()) {
            unsubscriber();
        }
    }

    componentDidUpdate(): void {
        this.props.updateModal();
    }

    /******************************/

    render(): JSX.Element {
        return (
            <>
                <button
                    className="btn btn-primary"
                    onClick={ this.onClickAddMarkerBtn }
                >
                    Add marker
                </button>
            </>
        );
    }
}